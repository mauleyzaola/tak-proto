// Code generated by protoc-gen-go. DO NOT EDIT.
// source: area-user-service.proto

package pb

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type AreaUserRequest struct {
	AreaUser             *AreaUser `protobuf:"bytes,1,opt,name=areaUser,proto3" json:"areaUser,omitempty"`
	XXX_NoUnkeyedLiteral struct{}  `json:"-"`
	XXX_unrecognized     []byte    `json:"-"`
	XXX_sizecache        int32     `json:"-"`
}

func (m *AreaUserRequest) Reset()         { *m = AreaUserRequest{} }
func (m *AreaUserRequest) String() string { return proto.CompactTextString(m) }
func (*AreaUserRequest) ProtoMessage()    {}
func (*AreaUserRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_area_user_service_1463466079d92373, []int{0}
}
func (m *AreaUserRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AreaUserRequest.Unmarshal(m, b)
}
func (m *AreaUserRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AreaUserRequest.Marshal(b, m, deterministic)
}
func (dst *AreaUserRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AreaUserRequest.Merge(dst, src)
}
func (m *AreaUserRequest) XXX_Size() int {
	return xxx_messageInfo_AreaUserRequest.Size(m)
}
func (m *AreaUserRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_AreaUserRequest.DiscardUnknown(m)
}

var xxx_messageInfo_AreaUserRequest proto.InternalMessageInfo

func (m *AreaUserRequest) GetAreaUser() *AreaUser {
	if m != nil {
		return m.AreaUser
	}
	return nil
}

type AreaUserListResponse struct {
	Rows                 []*AreaUser `protobuf:"bytes,1,rep,name=rows,proto3" json:"rows,omitempty"`
	XXX_NoUnkeyedLiteral struct{}    `json:"-"`
	XXX_unrecognized     []byte      `json:"-"`
	XXX_sizecache        int32       `json:"-"`
}

func (m *AreaUserListResponse) Reset()         { *m = AreaUserListResponse{} }
func (m *AreaUserListResponse) String() string { return proto.CompactTextString(m) }
func (*AreaUserListResponse) ProtoMessage()    {}
func (*AreaUserListResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_area_user_service_1463466079d92373, []int{1}
}
func (m *AreaUserListResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AreaUserListResponse.Unmarshal(m, b)
}
func (m *AreaUserListResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AreaUserListResponse.Marshal(b, m, deterministic)
}
func (dst *AreaUserListResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AreaUserListResponse.Merge(dst, src)
}
func (m *AreaUserListResponse) XXX_Size() int {
	return xxx_messageInfo_AreaUserListResponse.Size(m)
}
func (m *AreaUserListResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_AreaUserListResponse.DiscardUnknown(m)
}

var xxx_messageInfo_AreaUserListResponse proto.InternalMessageInfo

func (m *AreaUserListResponse) GetRows() []*AreaUser {
	if m != nil {
		return m.Rows
	}
	return nil
}

func init() {
	proto.RegisterType((*AreaUserRequest)(nil), "pb.AreaUserRequest")
	proto.RegisterType((*AreaUserListResponse)(nil), "pb.AreaUserListResponse")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// AreaUserServiceClient is the client API for AreaUserService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type AreaUserServiceClient interface {
	Ping(ctx context.Context, in *Request, opts ...grpc.CallOption) (*Response, error)
	Add(ctx context.Context, in *AreaUserRequest, opts ...grpc.CallOption) (*Response, error)
	Remove(ctx context.Context, in *AreaUserRequest, opts ...grpc.CallOption) (*Response, error)
	List(ctx context.Context, in *AreaUserRequest, opts ...grpc.CallOption) (*AreaUserListResponse, error)
}

type areaUserServiceClient struct {
	cc *grpc.ClientConn
}

func NewAreaUserServiceClient(cc *grpc.ClientConn) AreaUserServiceClient {
	return &areaUserServiceClient{cc}
}

func (c *areaUserServiceClient) Ping(ctx context.Context, in *Request, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/pb.AreaUserService/Ping", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *areaUserServiceClient) Add(ctx context.Context, in *AreaUserRequest, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/pb.AreaUserService/Add", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *areaUserServiceClient) Remove(ctx context.Context, in *AreaUserRequest, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/pb.AreaUserService/Remove", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *areaUserServiceClient) List(ctx context.Context, in *AreaUserRequest, opts ...grpc.CallOption) (*AreaUserListResponse, error) {
	out := new(AreaUserListResponse)
	err := c.cc.Invoke(ctx, "/pb.AreaUserService/List", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// AreaUserServiceServer is the server API for AreaUserService service.
type AreaUserServiceServer interface {
	Ping(context.Context, *Request) (*Response, error)
	Add(context.Context, *AreaUserRequest) (*Response, error)
	Remove(context.Context, *AreaUserRequest) (*Response, error)
	List(context.Context, *AreaUserRequest) (*AreaUserListResponse, error)
}

func RegisterAreaUserServiceServer(s *grpc.Server, srv AreaUserServiceServer) {
	s.RegisterService(&_AreaUserService_serviceDesc, srv)
}

func _AreaUserService_Ping_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AreaUserServiceServer).Ping(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pb.AreaUserService/Ping",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AreaUserServiceServer).Ping(ctx, req.(*Request))
	}
	return interceptor(ctx, in, info, handler)
}

func _AreaUserService_Add_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(AreaUserRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AreaUserServiceServer).Add(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pb.AreaUserService/Add",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AreaUserServiceServer).Add(ctx, req.(*AreaUserRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _AreaUserService_Remove_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(AreaUserRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AreaUserServiceServer).Remove(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pb.AreaUserService/Remove",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AreaUserServiceServer).Remove(ctx, req.(*AreaUserRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _AreaUserService_List_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(AreaUserRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AreaUserServiceServer).List(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pb.AreaUserService/List",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AreaUserServiceServer).List(ctx, req.(*AreaUserRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _AreaUserService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "pb.AreaUserService",
	HandlerType: (*AreaUserServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Ping",
			Handler:    _AreaUserService_Ping_Handler,
		},
		{
			MethodName: "Add",
			Handler:    _AreaUserService_Add_Handler,
		},
		{
			MethodName: "Remove",
			Handler:    _AreaUserService_Remove_Handler,
		},
		{
			MethodName: "List",
			Handler:    _AreaUserService_List_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "area-user-service.proto",
}

func init() {
	proto.RegisterFile("area-user-service.proto", fileDescriptor_area_user_service_1463466079d92373)
}

var fileDescriptor_area_user_service_1463466079d92373 = []byte{
	// 222 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0x12, 0x4f, 0x2c, 0x4a, 0x4d,
	0xd4, 0x2d, 0x2d, 0x4e, 0x2d, 0xd2, 0x2d, 0x4e, 0x2d, 0x2a, 0xcb, 0x4c, 0x4e, 0xd5, 0x2b, 0x28,
	0xca, 0x2f, 0xc9, 0x17, 0x62, 0x2a, 0x48, 0x92, 0xe2, 0x2b, 0x4a, 0x2d, 0x2e, 0xc8, 0xcf, 0x2b,
	0x86, 0x8a, 0x49, 0xf1, 0x16, 0xa5, 0x16, 0x96, 0xa6, 0x16, 0x97, 0x40, 0xb9, 0xfc, 0x70, 0xbd,
	0x10, 0x01, 0x25, 0x6b, 0x2e, 0x7e, 0xc7, 0xa2, 0xd4, 0xc4, 0xd0, 0xe2, 0xd4, 0xa2, 0x20, 0x88,
	0x4a, 0x21, 0x0d, 0x2e, 0x8e, 0x44, 0xa8, 0x90, 0x04, 0xa3, 0x02, 0xa3, 0x06, 0xb7, 0x11, 0x8f,
	0x5e, 0x41, 0x92, 0x1e, 0x5c, 0x19, 0x5c, 0x56, 0xc9, 0x82, 0x4b, 0x04, 0x26, 0xea, 0x93, 0x59,
	0x5c, 0x12, 0x04, 0xb5, 0x5a, 0x48, 0x81, 0x8b, 0xa5, 0x28, 0xbf, 0xbc, 0x58, 0x82, 0x51, 0x81,
	0x19, 0x43, 0x37, 0x58, 0xc6, 0xe8, 0x14, 0x23, 0xc2, 0xde, 0x60, 0x88, 0x27, 0x84, 0x94, 0xb9,
	0x58, 0x02, 0x32, 0xf3, 0xd2, 0x85, 0xb8, 0x41, 0xea, 0xa1, 0x8e, 0x91, 0xe2, 0x81, 0x70, 0x20,
	0x06, 0x2b, 0x31, 0x08, 0x69, 0x71, 0x31, 0x3b, 0xa6, 0xa4, 0x08, 0x09, 0xa3, 0x98, 0x89, 0x43,
	0xad, 0x2e, 0x17, 0x5b, 0x50, 0x6a, 0x6e, 0x7e, 0x59, 0x2a, 0x71, 0xca, 0xcd, 0xb9, 0x58, 0x40,
	0xbe, 0xc0, 0xae, 0x58, 0x02, 0x59, 0x10, 0xd9, 0xb3, 0x4a, 0x0c, 0x49, 0x6c, 0xe0, 0xa0, 0x34,
	0x06, 0x04, 0x00, 0x00, 0xff, 0xff, 0x94, 0xd8, 0x3c, 0xc7, 0x99, 0x01, 0x00, 0x00,
}

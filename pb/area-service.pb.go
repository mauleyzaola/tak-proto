// Code generated by protoc-gen-go. DO NOT EDIT.
// source: area-service.proto

package pb

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type AreaRequest struct {
	Area                 *Area    `protobuf:"bytes,1,opt,name=area,proto3" json:"area,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *AreaRequest) Reset()         { *m = AreaRequest{} }
func (m *AreaRequest) String() string { return proto.CompactTextString(m) }
func (*AreaRequest) ProtoMessage()    {}
func (*AreaRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_area_service_7b8a65559692f0bb, []int{0}
}
func (m *AreaRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AreaRequest.Unmarshal(m, b)
}
func (m *AreaRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AreaRequest.Marshal(b, m, deterministic)
}
func (dst *AreaRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AreaRequest.Merge(dst, src)
}
func (m *AreaRequest) XXX_Size() int {
	return xxx_messageInfo_AreaRequest.Size(m)
}
func (m *AreaRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_AreaRequest.DiscardUnknown(m)
}

var xxx_messageInfo_AreaRequest proto.InternalMessageInfo

func (m *AreaRequest) GetArea() *Area {
	if m != nil {
		return m.Area
	}
	return nil
}

type AreaResponse struct {
	Area                 *Area    `protobuf:"bytes,1,opt,name=area,proto3" json:"area,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *AreaResponse) Reset()         { *m = AreaResponse{} }
func (m *AreaResponse) String() string { return proto.CompactTextString(m) }
func (*AreaResponse) ProtoMessage()    {}
func (*AreaResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_area_service_7b8a65559692f0bb, []int{1}
}
func (m *AreaResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AreaResponse.Unmarshal(m, b)
}
func (m *AreaResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AreaResponse.Marshal(b, m, deterministic)
}
func (dst *AreaResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AreaResponse.Merge(dst, src)
}
func (m *AreaResponse) XXX_Size() int {
	return xxx_messageInfo_AreaResponse.Size(m)
}
func (m *AreaResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_AreaResponse.DiscardUnknown(m)
}

var xxx_messageInfo_AreaResponse proto.InternalMessageInfo

func (m *AreaResponse) GetArea() *Area {
	if m != nil {
		return m.Area
	}
	return nil
}

type AreaListResponse struct {
	Areas                []*Area  `protobuf:"bytes,1,rep,name=areas,proto3" json:"areas,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *AreaListResponse) Reset()         { *m = AreaListResponse{} }
func (m *AreaListResponse) String() string { return proto.CompactTextString(m) }
func (*AreaListResponse) ProtoMessage()    {}
func (*AreaListResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_area_service_7b8a65559692f0bb, []int{2}
}
func (m *AreaListResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AreaListResponse.Unmarshal(m, b)
}
func (m *AreaListResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AreaListResponse.Marshal(b, m, deterministic)
}
func (dst *AreaListResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AreaListResponse.Merge(dst, src)
}
func (m *AreaListResponse) XXX_Size() int {
	return xxx_messageInfo_AreaListResponse.Size(m)
}
func (m *AreaListResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_AreaListResponse.DiscardUnknown(m)
}

var xxx_messageInfo_AreaListResponse proto.InternalMessageInfo

func (m *AreaListResponse) GetAreas() []*Area {
	if m != nil {
		return m.Areas
	}
	return nil
}

func init() {
	proto.RegisterType((*AreaRequest)(nil), "pb.AreaRequest")
	proto.RegisterType((*AreaResponse)(nil), "pb.AreaResponse")
	proto.RegisterType((*AreaListResponse)(nil), "pb.AreaListResponse")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// AreaServiceClient is the client API for AreaService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type AreaServiceClient interface {
	Ping(ctx context.Context, in *Request, opts ...grpc.CallOption) (*Response, error)
	Load(ctx context.Context, in *AreaRequest, opts ...grpc.CallOption) (*AreaResponse, error)
	Create(ctx context.Context, in *AreaRequest, opts ...grpc.CallOption) (*AreaResponse, error)
	Update(ctx context.Context, in *AreaRequest, opts ...grpc.CallOption) (*AreaResponse, error)
	Remove(ctx context.Context, in *AreaRequest, opts ...grpc.CallOption) (*AreaResponse, error)
	Validate(ctx context.Context, in *Area, opts ...grpc.CallOption) (*Response, error)
	List(ctx context.Context, in *AreaRequest, opts ...grpc.CallOption) (*AreaListResponse, error)
}

type areaServiceClient struct {
	cc *grpc.ClientConn
}

func NewAreaServiceClient(cc *grpc.ClientConn) AreaServiceClient {
	return &areaServiceClient{cc}
}

func (c *areaServiceClient) Ping(ctx context.Context, in *Request, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/pb.AreaService/Ping", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *areaServiceClient) Load(ctx context.Context, in *AreaRequest, opts ...grpc.CallOption) (*AreaResponse, error) {
	out := new(AreaResponse)
	err := c.cc.Invoke(ctx, "/pb.AreaService/Load", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *areaServiceClient) Create(ctx context.Context, in *AreaRequest, opts ...grpc.CallOption) (*AreaResponse, error) {
	out := new(AreaResponse)
	err := c.cc.Invoke(ctx, "/pb.AreaService/Create", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *areaServiceClient) Update(ctx context.Context, in *AreaRequest, opts ...grpc.CallOption) (*AreaResponse, error) {
	out := new(AreaResponse)
	err := c.cc.Invoke(ctx, "/pb.AreaService/Update", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *areaServiceClient) Remove(ctx context.Context, in *AreaRequest, opts ...grpc.CallOption) (*AreaResponse, error) {
	out := new(AreaResponse)
	err := c.cc.Invoke(ctx, "/pb.AreaService/Remove", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *areaServiceClient) Validate(ctx context.Context, in *Area, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/pb.AreaService/Validate", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *areaServiceClient) List(ctx context.Context, in *AreaRequest, opts ...grpc.CallOption) (*AreaListResponse, error) {
	out := new(AreaListResponse)
	err := c.cc.Invoke(ctx, "/pb.AreaService/List", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// AreaServiceServer is the server API for AreaService service.
type AreaServiceServer interface {
	Ping(context.Context, *Request) (*Response, error)
	Load(context.Context, *AreaRequest) (*AreaResponse, error)
	Create(context.Context, *AreaRequest) (*AreaResponse, error)
	Update(context.Context, *AreaRequest) (*AreaResponse, error)
	Remove(context.Context, *AreaRequest) (*AreaResponse, error)
	Validate(context.Context, *Area) (*Response, error)
	List(context.Context, *AreaRequest) (*AreaListResponse, error)
}

func RegisterAreaServiceServer(s *grpc.Server, srv AreaServiceServer) {
	s.RegisterService(&_AreaService_serviceDesc, srv)
}

func _AreaService_Ping_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AreaServiceServer).Ping(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pb.AreaService/Ping",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AreaServiceServer).Ping(ctx, req.(*Request))
	}
	return interceptor(ctx, in, info, handler)
}

func _AreaService_Load_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(AreaRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AreaServiceServer).Load(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pb.AreaService/Load",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AreaServiceServer).Load(ctx, req.(*AreaRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _AreaService_Create_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(AreaRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AreaServiceServer).Create(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pb.AreaService/Create",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AreaServiceServer).Create(ctx, req.(*AreaRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _AreaService_Update_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(AreaRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AreaServiceServer).Update(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pb.AreaService/Update",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AreaServiceServer).Update(ctx, req.(*AreaRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _AreaService_Remove_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(AreaRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AreaServiceServer).Remove(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pb.AreaService/Remove",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AreaServiceServer).Remove(ctx, req.(*AreaRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _AreaService_Validate_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Area)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AreaServiceServer).Validate(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pb.AreaService/Validate",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AreaServiceServer).Validate(ctx, req.(*Area))
	}
	return interceptor(ctx, in, info, handler)
}

func _AreaService_List_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(AreaRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AreaServiceServer).List(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pb.AreaService/List",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AreaServiceServer).List(ctx, req.(*AreaRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _AreaService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "pb.AreaService",
	HandlerType: (*AreaServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Ping",
			Handler:    _AreaService_Ping_Handler,
		},
		{
			MethodName: "Load",
			Handler:    _AreaService_Load_Handler,
		},
		{
			MethodName: "Create",
			Handler:    _AreaService_Create_Handler,
		},
		{
			MethodName: "Update",
			Handler:    _AreaService_Update_Handler,
		},
		{
			MethodName: "Remove",
			Handler:    _AreaService_Remove_Handler,
		},
		{
			MethodName: "Validate",
			Handler:    _AreaService_Validate_Handler,
		},
		{
			MethodName: "List",
			Handler:    _AreaService_List_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "area-service.proto",
}

func init() { proto.RegisterFile("area-service.proto", fileDescriptor_area_service_7b8a65559692f0bb) }

var fileDescriptor_area_service_7b8a65559692f0bb = []byte{
	// 250 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0x12, 0x4a, 0x2c, 0x4a, 0x4d,
	0xd4, 0x2d, 0x4e, 0x2d, 0x2a, 0xcb, 0x4c, 0x4e, 0xd5, 0x2b, 0x28, 0xca, 0x2f, 0xc9, 0x17, 0x62,
	0x2a, 0x48, 0x92, 0xe2, 0x2b, 0x4a, 0x2d, 0x2e, 0xc8, 0xcf, 0x2b, 0x86, 0x8a, 0x49, 0x71, 0x81,
	0xd4, 0x41, 0xd9, 0xbc, 0x45, 0xa9, 0x85, 0xa5, 0xa9, 0xc5, 0x25, 0x10, 0xae, 0x92, 0x36, 0x17,
	0xb7, 0x63, 0x51, 0x6a, 0x62, 0x10, 0x44, 0x50, 0x48, 0x86, 0x8b, 0x05, 0xa4, 0x56, 0x82, 0x51,
	0x81, 0x51, 0x83, 0xdb, 0x88, 0x43, 0xaf, 0x20, 0x49, 0x0f, 0x2c, 0x0d, 0x16, 0x55, 0xd2, 0xe1,
	0xe2, 0x81, 0x28, 0x86, 0x98, 0x4e, 0x40, 0xb5, 0x11, 0x97, 0x00, 0x88, 0xe7, 0x93, 0x59, 0x5c,
	0x02, 0xd7, 0x21, 0xc7, 0xc5, 0x0a, 0x92, 0x2b, 0x96, 0x60, 0x54, 0x60, 0x46, 0xd1, 0x02, 0x11,
	0x36, 0x3a, 0xcc, 0x04, 0x71, 0x4f, 0x30, 0xc4, 0x4f, 0x42, 0xca, 0x5c, 0x2c, 0x01, 0x99, 0x79,
	0xe9, 0x42, 0xdc, 0x20, 0x85, 0x50, 0x47, 0x4a, 0xf1, 0x40, 0x38, 0x10, 0x23, 0x95, 0x18, 0x84,
	0xb4, 0xb9, 0x58, 0x7c, 0xf2, 0x13, 0x53, 0x84, 0xf8, 0xe1, 0xa6, 0x41, 0x15, 0x0a, 0x20, 0x04,
	0xe0, 0x8a, 0x75, 0xb9, 0xd8, 0x9c, 0x8b, 0x52, 0x13, 0x4b, 0x52, 0x89, 0x56, 0x1e, 0x5a, 0x90,
	0x42, 0x8a, 0xf2, 0xa0, 0xd4, 0xdc, 0xfc, 0x32, 0x22, 0x95, 0xab, 0x70, 0x71, 0x84, 0x25, 0xe6,
	0x64, 0x82, 0xcd, 0x87, 0x87, 0x05, 0x86, 0xff, 0xf4, 0xb9, 0x58, 0x40, 0x81, 0x88, 0x69, 0xa4,
	0x08, 0x4c, 0x00, 0x39, 0x8c, 0x95, 0x18, 0x92, 0xd8, 0xc0, 0x71, 0x6b, 0x0c, 0x08, 0x00, 0x00,
	0xff, 0xff, 0x90, 0x66, 0x5e, 0x2e, 0x20, 0x02, 0x00, 0x00,
}

// Code generated by protoc-gen-go. DO NOT EDIT.
// source: comm-dash.proto

package pb

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"
import timestamp "github.com/golang/protobuf/ptypes/timestamp"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type CommDash struct {
	Id                   string               `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Number               int32                `protobuf:"varint,2,opt,name=number,proto3" json:"number,omitempty"`
	Type                 string               `protobuf:"bytes,3,opt,name=type,proto3" json:"type,omitempty"`
	Created              *timestamp.Timestamp `protobuf:"bytes,4,opt,name=created,proto3" json:"created,omitempty"`
	StartDate            *timestamp.Timestamp `protobuf:"bytes,5,opt,name=startDate,proto3" json:"startDate,omitempty"`
	CancelledDate        *timestamp.Timestamp `protobuf:"bytes,6,opt,name=cancelledDate,proto3" json:"cancelledDate,omitempty"`
	EstimatedDate        *timestamp.Timestamp `protobuf:"bytes,7,opt,name=estimatedDate,proto3" json:"estimatedDate,omitempty"`
	Material             *LabMaterial         `protobuf:"bytes,8,opt,name=material,proto3" json:"material,omitempty"`
	Owner                *User                `protobuf:"bytes,9,opt,name=owner,proto3" json:"owner,omitempty"`
	Price                float64              `protobuf:"fixed64,10,opt,name=price,proto3" json:"price,omitempty"`
	Cas                  string               `protobuf:"bytes,11,opt,name=cas,proto3" json:"cas,omitempty"`
	Fema                 string               `protobuf:"bytes,12,opt,name=fema,proto3" json:"fema,omitempty"`
	NextAction           string               `protobuf:"bytes,13,opt,name=nextAction,proto3" json:"nextAction,omitempty"`
	TrackId              string               `protobuf:"bytes,14,opt,name=trackId,proto3" json:"trackId,omitempty"`
	Carrier              string               `protobuf:"bytes,15,opt,name=carrier,proto3" json:"carrier,omitempty"`
	Status               string               `protobuf:"bytes,16,opt,name=status,proto3" json:"status,omitempty"`
	Reason               string               `protobuf:"bytes,17,opt,name=reason,proto3" json:"reason,omitempty"`
	UserCancelled        string               `protobuf:"bytes,18,opt,name=userCancelled,proto3" json:"userCancelled,omitempty"`
	Assignee             *User                `protobuf:"bytes,19,opt,name=assignee,proto3" json:"assignee,omitempty"`
	RegulatoryStatus     string               `protobuf:"bytes,20,opt,name=regulatoryStatus,proto3" json:"regulatoryStatus,omitempty"`
	Supplier             *Supplier            `protobuf:"bytes,21,opt,name=supplier,proto3" json:"supplier,omitempty"`
	PurchaseOrder        string               `protobuf:"bytes,22,opt,name=purchaseOrder,proto3" json:"purchaseOrder,omitempty"`
	Quantity             float64              `protobuf:"fixed64,23,opt,name=quantity,proto3" json:"quantity,omitempty"`
	PotentialKg          float64              `protobuf:"fixed64,24,opt,name=potentialKg,proto3" json:"potentialKg,omitempty"`
	Currency             *Catalog             `protobuf:"bytes,25,opt,name=currency,proto3" json:"currency,omitempty"`
	ClientSpec           string               `protobuf:"bytes,26,opt,name=clientSpec,proto3" json:"clientSpec,omitempty"`
	HasPrice             bool                 `protobuf:"varint,27,opt,name=hasPrice,proto3" json:"hasPrice,omitempty"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *CommDash) Reset()         { *m = CommDash{} }
func (m *CommDash) String() string { return proto.CompactTextString(m) }
func (*CommDash) ProtoMessage()    {}
func (*CommDash) Descriptor() ([]byte, []int) {
	return fileDescriptor_comm_dash_8add80bba11ab28f, []int{0}
}
func (m *CommDash) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CommDash.Unmarshal(m, b)
}
func (m *CommDash) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CommDash.Marshal(b, m, deterministic)
}
func (dst *CommDash) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CommDash.Merge(dst, src)
}
func (m *CommDash) XXX_Size() int {
	return xxx_messageInfo_CommDash.Size(m)
}
func (m *CommDash) XXX_DiscardUnknown() {
	xxx_messageInfo_CommDash.DiscardUnknown(m)
}

var xxx_messageInfo_CommDash proto.InternalMessageInfo

func (m *CommDash) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *CommDash) GetNumber() int32 {
	if m != nil {
		return m.Number
	}
	return 0
}

func (m *CommDash) GetType() string {
	if m != nil {
		return m.Type
	}
	return ""
}

func (m *CommDash) GetCreated() *timestamp.Timestamp {
	if m != nil {
		return m.Created
	}
	return nil
}

func (m *CommDash) GetStartDate() *timestamp.Timestamp {
	if m != nil {
		return m.StartDate
	}
	return nil
}

func (m *CommDash) GetCancelledDate() *timestamp.Timestamp {
	if m != nil {
		return m.CancelledDate
	}
	return nil
}

func (m *CommDash) GetEstimatedDate() *timestamp.Timestamp {
	if m != nil {
		return m.EstimatedDate
	}
	return nil
}

func (m *CommDash) GetMaterial() *LabMaterial {
	if m != nil {
		return m.Material
	}
	return nil
}

func (m *CommDash) GetOwner() *User {
	if m != nil {
		return m.Owner
	}
	return nil
}

func (m *CommDash) GetPrice() float64 {
	if m != nil {
		return m.Price
	}
	return 0
}

func (m *CommDash) GetCas() string {
	if m != nil {
		return m.Cas
	}
	return ""
}

func (m *CommDash) GetFema() string {
	if m != nil {
		return m.Fema
	}
	return ""
}

func (m *CommDash) GetNextAction() string {
	if m != nil {
		return m.NextAction
	}
	return ""
}

func (m *CommDash) GetTrackId() string {
	if m != nil {
		return m.TrackId
	}
	return ""
}

func (m *CommDash) GetCarrier() string {
	if m != nil {
		return m.Carrier
	}
	return ""
}

func (m *CommDash) GetStatus() string {
	if m != nil {
		return m.Status
	}
	return ""
}

func (m *CommDash) GetReason() string {
	if m != nil {
		return m.Reason
	}
	return ""
}

func (m *CommDash) GetUserCancelled() string {
	if m != nil {
		return m.UserCancelled
	}
	return ""
}

func (m *CommDash) GetAssignee() *User {
	if m != nil {
		return m.Assignee
	}
	return nil
}

func (m *CommDash) GetRegulatoryStatus() string {
	if m != nil {
		return m.RegulatoryStatus
	}
	return ""
}

func (m *CommDash) GetSupplier() *Supplier {
	if m != nil {
		return m.Supplier
	}
	return nil
}

func (m *CommDash) GetPurchaseOrder() string {
	if m != nil {
		return m.PurchaseOrder
	}
	return ""
}

func (m *CommDash) GetQuantity() float64 {
	if m != nil {
		return m.Quantity
	}
	return 0
}

func (m *CommDash) GetPotentialKg() float64 {
	if m != nil {
		return m.PotentialKg
	}
	return 0
}

func (m *CommDash) GetCurrency() *Catalog {
	if m != nil {
		return m.Currency
	}
	return nil
}

func (m *CommDash) GetClientSpec() string {
	if m != nil {
		return m.ClientSpec
	}
	return ""
}

func (m *CommDash) GetHasPrice() bool {
	if m != nil {
		return m.HasPrice
	}
	return false
}

func init() {
	proto.RegisterType((*CommDash)(nil), "pb.CommDash")
}

func init() { proto.RegisterFile("comm-dash.proto", fileDescriptor_comm_dash_8add80bba11ab28f) }

var fileDescriptor_comm_dash_8add80bba11ab28f = []byte{
	// 549 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x84, 0x53, 0xdd, 0x6e, 0x13, 0x3d,
	0x10, 0xd5, 0xa6, 0x4d, 0xb3, 0x9d, 0x34, 0x6d, 0x3f, 0x7f, 0xa5, 0x0c, 0x41, 0x2a, 0x11, 0xaa,
	0x44, 0x04, 0x6a, 0x2a, 0x01, 0x17, 0x5c, 0x82, 0xda, 0x1b, 0x04, 0x08, 0xb4, 0x85, 0x07, 0x98,
	0xf5, 0x4e, 0x13, 0x8b, 0xfd, 0xc3, 0xf6, 0x0a, 0xf2, 0x5a, 0x3c, 0x21, 0xb2, 0xbd, 0xbb, 0x6d,
	0xe0, 0x22, 0x77, 0x3e, 0xe7, 0xcc, 0x8c, 0x8e, 0xce, 0x8c, 0xe1, 0x48, 0x56, 0x45, 0x71, 0x91,
	0x91, 0x59, 0x2d, 0x6a, 0x5d, 0xd9, 0x4a, 0x0c, 0xea, 0x74, 0xfa, 0x64, 0x59, 0x55, 0xcb, 0x9c,
	0x2f, 0x3d, 0x93, 0x36, 0xb7, 0x97, 0x56, 0x15, 0x6c, 0x2c, 0x15, 0x75, 0x28, 0x9a, 0x4e, 0x24,
	0x59, 0xca, 0xab, 0x65, 0x0b, 0x45, 0x4e, 0xe9, 0x45, 0x41, 0x96, 0xb5, 0xa2, 0xbc, 0xe5, 0x0e,
	0x4d, 0x53, 0xd7, 0xb9, 0x62, 0xdd, 0x62, 0x68, 0x4c, 0xf7, 0x7e, 0xfa, 0x7b, 0x04, 0xf1, 0x55,
	0x55, 0x14, 0xd7, 0x64, 0x56, 0xe2, 0x10, 0x06, 0x2a, 0xc3, 0x68, 0x16, 0xcd, 0xf7, 0x93, 0x81,
	0xca, 0xc4, 0x29, 0xec, 0x95, 0x4d, 0x91, 0xb2, 0xc6, 0xc1, 0x2c, 0x9a, 0x0f, 0x93, 0x16, 0x09,
	0x01, 0xbb, 0x76, 0x5d, 0x33, 0xee, 0xf8, 0x4a, 0xff, 0x16, 0xaf, 0x61, 0x24, 0x35, 0x93, 0xe5,
	0x0c, 0x77, 0x67, 0xd1, 0x7c, 0xfc, 0x72, 0xba, 0x08, 0xd6, 0x17, 0x9d, 0xf5, 0xc5, 0xd7, 0xce,
	0x7a, 0xd2, 0x95, 0x8a, 0x37, 0xb0, 0x6f, 0x2c, 0x69, 0x7b, 0x4d, 0x96, 0x71, 0xb8, 0xb5, 0xef,
	0xae, 0x58, 0xbc, 0x85, 0x89, 0xa4, 0x52, 0x72, 0x9e, 0x73, 0xe6, 0xbb, 0xf7, 0xb6, 0x76, 0x6f,
	0x36, 0xb8, 0x09, 0x6c, 0xac, 0x72, 0x61, 0x85, 0x09, 0xa3, 0xed, 0x13, 0x36, 0x1a, 0xc4, 0x0b,
	0x88, 0xbb, 0xa8, 0x31, 0xf6, 0xcd, 0x47, 0x8b, 0x3a, 0x5d, 0x7c, 0xa4, 0xf4, 0x53, 0x4b, 0x27,
	0x7d, 0x81, 0x38, 0x83, 0x61, 0xf5, 0xb3, 0x64, 0x8d, 0xfb, 0xbe, 0x32, 0x76, 0x95, 0xdf, 0x0c,
	0xeb, 0x24, 0xd0, 0xe2, 0x04, 0x86, 0xb5, 0x56, 0x92, 0x11, 0x66, 0xd1, 0x3c, 0x4a, 0x02, 0x10,
	0xc7, 0xb0, 0x23, 0xc9, 0xe0, 0xd8, 0x27, 0xed, 0x9e, 0x2e, 0xfc, 0x5b, 0x2e, 0x08, 0x0f, 0x42,
	0xf8, 0xee, 0x2d, 0xce, 0x00, 0x4a, 0xfe, 0x65, 0xdf, 0x49, 0xab, 0xaa, 0x12, 0x27, 0x5e, 0xb9,
	0xc7, 0x08, 0x84, 0x91, 0xd5, 0x24, 0xbf, 0xbf, 0xcf, 0xf0, 0xd0, 0x8b, 0x1d, 0x74, 0x8a, 0x24,
	0xad, 0x15, 0x6b, 0x3c, 0x0a, 0x4a, 0x0b, 0xdd, 0xf2, 0x8d, 0x25, 0xdb, 0x18, 0x3c, 0xf6, 0x42,
	0x8b, 0x1c, 0xaf, 0x99, 0x4c, 0x55, 0xe2, 0x7f, 0x81, 0x0f, 0x48, 0x9c, 0xc3, 0xc4, 0xdd, 0xd5,
	0x55, 0x97, 0x31, 0x0a, 0x2f, 0x6f, 0x92, 0xe2, 0x1c, 0x62, 0x32, 0x46, 0x2d, 0x4b, 0x66, 0xfc,
	0xff, 0xaf, 0x20, 0x7a, 0x45, 0x3c, 0x87, 0x63, 0xcd, 0xcb, 0x26, 0x27, 0x5b, 0xe9, 0xf5, 0x4d,
	0x70, 0x71, 0xe2, 0xc7, 0xfd, 0xc3, 0x8b, 0x39, 0xc4, 0xdd, 0x7d, 0xe3, 0x03, 0x3f, 0xf1, 0xc0,
	0x4d, 0xbc, 0x69, 0xb9, 0xa4, 0x57, 0x9d, 0xc3, 0xba, 0xd1, 0x72, 0x45, 0x86, 0x3f, 0xeb, 0x8c,
	0x35, 0x9e, 0x06, 0x87, 0x1b, 0xa4, 0x98, 0x42, 0xfc, 0xa3, 0xa1, 0xd2, 0x2a, 0xbb, 0xc6, 0x87,
	0x7e, 0x15, 0x3d, 0x16, 0x33, 0x18, 0xd7, 0x95, 0xe5, 0xd2, 0x2a, 0xca, 0x3f, 0x2c, 0x11, 0xbd,
	0x7c, 0x9f, 0x12, 0xcf, 0x20, 0x96, 0x8d, 0xd6, 0x5c, 0xca, 0x35, 0x3e, 0xf2, 0x6e, 0xc6, 0xce,
	0xcd, 0x55, 0xf8, 0xa4, 0x49, 0x2f, 0xba, 0x95, 0xc9, 0x5c, 0x71, 0x69, 0x6f, 0x6a, 0x96, 0x38,
	0x0d, 0x2b, 0xbb, 0x63, 0x9c, 0x8d, 0x15, 0x99, 0x2f, 0xfe, 0x22, 0x1e, 0xcf, 0xa2, 0x79, 0x9c,
	0xf4, 0x38, 0xdd, 0xf3, 0xa7, 0xf9, 0xea, 0x4f, 0x00, 0x00, 0x00, 0xff, 0xff, 0xc0, 0x98, 0x2a,
	0xf7, 0x32, 0x04, 0x00, 0x00,
}

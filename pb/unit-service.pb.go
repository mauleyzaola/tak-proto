// Code generated by protoc-gen-go. DO NOT EDIT.
// source: unit-service.proto

package pb

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type UnitRequest struct {
	Unit                 *Unit    `protobuf:"bytes,1,opt,name=unit,proto3" json:"unit,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *UnitRequest) Reset()         { *m = UnitRequest{} }
func (m *UnitRequest) String() string { return proto.CompactTextString(m) }
func (*UnitRequest) ProtoMessage()    {}
func (*UnitRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_unit_service_6ce327ff324067dd, []int{0}
}
func (m *UnitRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UnitRequest.Unmarshal(m, b)
}
func (m *UnitRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UnitRequest.Marshal(b, m, deterministic)
}
func (dst *UnitRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UnitRequest.Merge(dst, src)
}
func (m *UnitRequest) XXX_Size() int {
	return xxx_messageInfo_UnitRequest.Size(m)
}
func (m *UnitRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_UnitRequest.DiscardUnknown(m)
}

var xxx_messageInfo_UnitRequest proto.InternalMessageInfo

func (m *UnitRequest) GetUnit() *Unit {
	if m != nil {
		return m.Unit
	}
	return nil
}

type UnitResponse struct {
	Unit                 *Unit    `protobuf:"bytes,1,opt,name=unit,proto3" json:"unit,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *UnitResponse) Reset()         { *m = UnitResponse{} }
func (m *UnitResponse) String() string { return proto.CompactTextString(m) }
func (*UnitResponse) ProtoMessage()    {}
func (*UnitResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_unit_service_6ce327ff324067dd, []int{1}
}
func (m *UnitResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UnitResponse.Unmarshal(m, b)
}
func (m *UnitResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UnitResponse.Marshal(b, m, deterministic)
}
func (dst *UnitResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UnitResponse.Merge(dst, src)
}
func (m *UnitResponse) XXX_Size() int {
	return xxx_messageInfo_UnitResponse.Size(m)
}
func (m *UnitResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_UnitResponse.DiscardUnknown(m)
}

var xxx_messageInfo_UnitResponse proto.InternalMessageInfo

func (m *UnitResponse) GetUnit() *Unit {
	if m != nil {
		return m.Unit
	}
	return nil
}

type UnitListResponse struct {
	Units                []*Unit  `protobuf:"bytes,1,rep,name=units,proto3" json:"units,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *UnitListResponse) Reset()         { *m = UnitListResponse{} }
func (m *UnitListResponse) String() string { return proto.CompactTextString(m) }
func (*UnitListResponse) ProtoMessage()    {}
func (*UnitListResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_unit_service_6ce327ff324067dd, []int{2}
}
func (m *UnitListResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UnitListResponse.Unmarshal(m, b)
}
func (m *UnitListResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UnitListResponse.Marshal(b, m, deterministic)
}
func (dst *UnitListResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UnitListResponse.Merge(dst, src)
}
func (m *UnitListResponse) XXX_Size() int {
	return xxx_messageInfo_UnitListResponse.Size(m)
}
func (m *UnitListResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_UnitListResponse.DiscardUnknown(m)
}

var xxx_messageInfo_UnitListResponse proto.InternalMessageInfo

func (m *UnitListResponse) GetUnits() []*Unit {
	if m != nil {
		return m.Units
	}
	return nil
}

func init() {
	proto.RegisterType((*UnitRequest)(nil), "pb.UnitRequest")
	proto.RegisterType((*UnitResponse)(nil), "pb.UnitResponse")
	proto.RegisterType((*UnitListResponse)(nil), "pb.UnitListResponse")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// UnitServiceClient is the client API for UnitService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type UnitServiceClient interface {
	Ping(ctx context.Context, in *Request, opts ...grpc.CallOption) (*Response, error)
	Load(ctx context.Context, in *UnitRequest, opts ...grpc.CallOption) (*UnitResponse, error)
	Create(ctx context.Context, in *UnitRequest, opts ...grpc.CallOption) (*UnitResponse, error)
	Update(ctx context.Context, in *UnitRequest, opts ...grpc.CallOption) (*UnitResponse, error)
	Remove(ctx context.Context, in *UnitRequest, opts ...grpc.CallOption) (*UnitResponse, error)
	Validate(ctx context.Context, in *Unit, opts ...grpc.CallOption) (*Response, error)
	List(ctx context.Context, in *UnitRequest, opts ...grpc.CallOption) (*UnitListResponse, error)
}

type unitServiceClient struct {
	cc *grpc.ClientConn
}

func NewUnitServiceClient(cc *grpc.ClientConn) UnitServiceClient {
	return &unitServiceClient{cc}
}

func (c *unitServiceClient) Ping(ctx context.Context, in *Request, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/pb.UnitService/Ping", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *unitServiceClient) Load(ctx context.Context, in *UnitRequest, opts ...grpc.CallOption) (*UnitResponse, error) {
	out := new(UnitResponse)
	err := c.cc.Invoke(ctx, "/pb.UnitService/Load", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *unitServiceClient) Create(ctx context.Context, in *UnitRequest, opts ...grpc.CallOption) (*UnitResponse, error) {
	out := new(UnitResponse)
	err := c.cc.Invoke(ctx, "/pb.UnitService/Create", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *unitServiceClient) Update(ctx context.Context, in *UnitRequest, opts ...grpc.CallOption) (*UnitResponse, error) {
	out := new(UnitResponse)
	err := c.cc.Invoke(ctx, "/pb.UnitService/Update", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *unitServiceClient) Remove(ctx context.Context, in *UnitRequest, opts ...grpc.CallOption) (*UnitResponse, error) {
	out := new(UnitResponse)
	err := c.cc.Invoke(ctx, "/pb.UnitService/Remove", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *unitServiceClient) Validate(ctx context.Context, in *Unit, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/pb.UnitService/Validate", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *unitServiceClient) List(ctx context.Context, in *UnitRequest, opts ...grpc.CallOption) (*UnitListResponse, error) {
	out := new(UnitListResponse)
	err := c.cc.Invoke(ctx, "/pb.UnitService/List", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// UnitServiceServer is the server API for UnitService service.
type UnitServiceServer interface {
	Ping(context.Context, *Request) (*Response, error)
	Load(context.Context, *UnitRequest) (*UnitResponse, error)
	Create(context.Context, *UnitRequest) (*UnitResponse, error)
	Update(context.Context, *UnitRequest) (*UnitResponse, error)
	Remove(context.Context, *UnitRequest) (*UnitResponse, error)
	Validate(context.Context, *Unit) (*Response, error)
	List(context.Context, *UnitRequest) (*UnitListResponse, error)
}

func RegisterUnitServiceServer(s *grpc.Server, srv UnitServiceServer) {
	s.RegisterService(&_UnitService_serviceDesc, srv)
}

func _UnitService_Ping_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(UnitServiceServer).Ping(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pb.UnitService/Ping",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(UnitServiceServer).Ping(ctx, req.(*Request))
	}
	return interceptor(ctx, in, info, handler)
}

func _UnitService_Load_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UnitRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(UnitServiceServer).Load(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pb.UnitService/Load",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(UnitServiceServer).Load(ctx, req.(*UnitRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _UnitService_Create_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UnitRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(UnitServiceServer).Create(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pb.UnitService/Create",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(UnitServiceServer).Create(ctx, req.(*UnitRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _UnitService_Update_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UnitRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(UnitServiceServer).Update(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pb.UnitService/Update",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(UnitServiceServer).Update(ctx, req.(*UnitRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _UnitService_Remove_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UnitRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(UnitServiceServer).Remove(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pb.UnitService/Remove",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(UnitServiceServer).Remove(ctx, req.(*UnitRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _UnitService_Validate_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Unit)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(UnitServiceServer).Validate(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pb.UnitService/Validate",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(UnitServiceServer).Validate(ctx, req.(*Unit))
	}
	return interceptor(ctx, in, info, handler)
}

func _UnitService_List_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UnitRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(UnitServiceServer).List(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pb.UnitService/List",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(UnitServiceServer).List(ctx, req.(*UnitRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _UnitService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "pb.UnitService",
	HandlerType: (*UnitServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Ping",
			Handler:    _UnitService_Ping_Handler,
		},
		{
			MethodName: "Load",
			Handler:    _UnitService_Load_Handler,
		},
		{
			MethodName: "Create",
			Handler:    _UnitService_Create_Handler,
		},
		{
			MethodName: "Update",
			Handler:    _UnitService_Update_Handler,
		},
		{
			MethodName: "Remove",
			Handler:    _UnitService_Remove_Handler,
		},
		{
			MethodName: "Validate",
			Handler:    _UnitService_Validate_Handler,
		},
		{
			MethodName: "List",
			Handler:    _UnitService_List_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "unit-service.proto",
}

func init() { proto.RegisterFile("unit-service.proto", fileDescriptor_unit_service_6ce327ff324067dd) }

var fileDescriptor_unit_service_6ce327ff324067dd = []byte{
	// 249 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0x12, 0x2a, 0xcd, 0xcb, 0x2c,
	0xd1, 0x2d, 0x4e, 0x2d, 0x2a, 0xcb, 0x4c, 0x4e, 0xd5, 0x2b, 0x28, 0xca, 0x2f, 0xc9, 0x17, 0x62,
	0x2a, 0x48, 0x92, 0xe2, 0x2b, 0x4a, 0x2d, 0x2e, 0xc8, 0xcf, 0x2b, 0x86, 0x8a, 0x49, 0xf1, 0x16,
	0xa5, 0x16, 0x96, 0xa6, 0x16, 0x97, 0x40, 0xb9, 0x5c, 0x20, 0x6d, 0x10, 0xb6, 0x92, 0x36, 0x17,
	0x77, 0x68, 0x5e, 0x66, 0x49, 0x10, 0x44, 0x81, 0x90, 0x0c, 0x17, 0x0b, 0x48, 0x52, 0x82, 0x51,
	0x81, 0x51, 0x83, 0xdb, 0x88, 0x43, 0xaf, 0x20, 0x49, 0x0f, 0x2c, 0x0d, 0x16, 0x55, 0xd2, 0xe1,
	0xe2, 0x81, 0x28, 0x86, 0x98, 0x4e, 0x40, 0xb5, 0x11, 0x97, 0x00, 0x88, 0xe7, 0x93, 0x59, 0x8c,
	0xd0, 0x21, 0xc7, 0xc5, 0x0a, 0x92, 0x2b, 0x96, 0x60, 0x54, 0x60, 0x46, 0xd1, 0x02, 0x11, 0x36,
	0x3a, 0xcc, 0x04, 0x71, 0x4f, 0x30, 0xc4, 0x4f, 0x42, 0xca, 0x5c, 0x2c, 0x01, 0x99, 0x79, 0xe9,
	0x42, 0xdc, 0x20, 0x85, 0x50, 0x47, 0x4a, 0xf1, 0x40, 0x38, 0x10, 0x23, 0x95, 0x18, 0x84, 0xb4,
	0xb9, 0x58, 0x7c, 0xf2, 0x13, 0x53, 0x84, 0xf8, 0xe1, 0xa6, 0x41, 0x15, 0x0a, 0x20, 0x04, 0xe0,
	0x8a, 0x75, 0xb9, 0xd8, 0x9c, 0x8b, 0x52, 0x13, 0x4b, 0x52, 0x89, 0x56, 0x1e, 0x5a, 0x90, 0x42,
	0x8a, 0xf2, 0xa0, 0xd4, 0xdc, 0xfc, 0x32, 0x22, 0x95, 0xab, 0x70, 0x71, 0x84, 0x25, 0xe6, 0x64,
	0x82, 0xcd, 0x87, 0x87, 0x05, 0x86, 0xff, 0xf4, 0xb9, 0x58, 0x40, 0x81, 0x88, 0x69, 0xa4, 0x08,
	0x4c, 0x00, 0x39, 0x8c, 0x95, 0x18, 0x92, 0xd8, 0xc0, 0x71, 0x6b, 0x0c, 0x08, 0x00, 0x00, 0xff,
	0xff, 0xc4, 0xd4, 0x54, 0x98, 0x20, 0x02, 0x00, 0x00,
}
